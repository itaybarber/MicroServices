/*
  אנחנו צריכים לברר אם יוזר מחובר בכל נקודת זמן ולהציג על המסך דאטה
  מסוים במידה והוא מחובר ודאטה אחר במידה ולא  

  איך נחליט אם יוזר מחובר או לא?
  אנחנו צריכים לוודא שנקסט.ג'ס קליינט שולח רקווסט ל
  Auth Service in /api/users/currentuser route.
  אם אנחנו מחוברים, הרספונס שנקבל תהיה מידע על היוזר כמו מייל ואיידי
  אחרת נאל.
  
  כשיוזר שולח את הבקשה הראשונית
  to GET our app,
  אנחנו רוצים לשלוח לו ישר קובץ ה.ט.מ.ל עם מידע אם היוזר מחובר או לא
  לכן אנחנו צריכים להבין איך למלא את הבקשה של היוזר, כאשר האפליקציה שלנו רק עולה בפעם הראשונה 
  
  מה קורה כאשר יוזר פונה לנקסט ג.ס. שבקליינט:
  1) הנקסט מברר את הכתובת יו.אר.אל. שנשלחה בבקשה ומחליט אילו קומפוננטות להראות
  2) הוא קורא למתודה הסטטית - getInitalProps
  3) מרנדר כל קומפפנטה עם דאטה שהגיע מהמתודה הקודמת פעם אחת בלבד
  4) מרכיב ה.ט.מ.ל מכל הקומפוננטוות ושולח את הרספונס

*/
import axios from 'axios'; // משתמשים באקסיוס למרות שיש לנו את ההוק כדי שנקסט יוכל לעשות רקווסט אוט' סרוויס
// בגלל שהוק יכול להיות משומש רק בתוך קומפוננטות ריאקט. ואנחנו בגט איניטיאל פרופס צריכים לעשות את הרקווסט


// לא ניתן לטעון מידע  בתוך הקומפוננטות עצמן משום שהן מרונדרות פע אחת
// לכן לא ניתן להגיד - תמלא בקשה ואז תמתין לתשובה ולעדכן סטייט או משהו כזה 
// אחרי שהאפליקצי כבר בבראווזר הגט איניטיאל פרופס כבר לא רלוונטית
const LandingPage = ({ currentUser }) => {
  console.log(  currentUser);
  return <h1>LandingPage</h1>;
};

// זו מתודה של נקסט ואם נחליט לממשה (כמו פה) אז נקסט ידע לקרוא לה
// כאשר הוא מנסה לרנדר את האפליקציה כשהוא על השרת ופה נמצאת
// ההזמדנות שלנו ללעשות פאטש' לדאטה מהשרת שהקומפונטה צריכה
// כשעובדים בקוברנטיס באינגרס אנג'ינקס והבקשה צריכה להשלח לסרוויס אחר
// היא לא תגיע ונקבל שגיאה וכדי לתקן את זה צריך לקנפג את אקסיוס שידע מאיפה לשלוח - מהבראוזר או מנקסט.גס
// ואקסיוס ייגש לאינגרס אנג'ינאקס - הבעיה שהיא שהוא לא יודע מה הכתובת
// 

LandingPage.getInitialProps = async ({req}) => { // כשהמתודה נקראת, על השרת, הארגומנט הראשון הוא אובייקט שאחד מהפרורטיס שלו זה אובייקט רעק, דרכו נקבל קוקי
  if (typeof window === 'undefined') { // חלון הוא אובייקט שקיים רק בתוך בראוזר לכן אם לא מוגדר- אנחנו על השרת
    const response = await axios.get(
      'http://ingress-nginx.ingress-nginx.sv.cluster.local/api/users/currentuser',
      // Format is: http://SERVICENAME.NAMESPACE.svc.cluster.local 
          // To get all namespaces: kubectl get namespace
          // To get all services inside that namespace: kubectl get services -n namespaceName
      {
        headers: req.headers 
        // {
        //   Host: 'ticketing.dev' // This is for nginx, to know for which domain we need as specified in the rules of ingress-srv.yaml
        // }
    }); 
    }
  else { // נהיה במצב הזה, רק כאשר הדף הוא רי-דירקטד מתוך דף אחר באפליקצי. ריפרש או הכנסת היו.ר.ל או ריידרקט מאפליקצי אחרת יביא אותנו לשרת
    const response = await axios.get('/api/users/currentuser'); 
  }
  // זה אובייקט שיש לו פרופרטי של יוזרנוכחי עם ערך נאל אם היוזר לא מחובר או עם אובייקט של יוזר אם כן 
    return response.data;
}
export default LandingPage;